kind: pipeline
name: default

steps:
    
- name: lint
  image: node:buster
  volumes:
  - name: node_modules
    path: /usr/local/lib/node_modules
  commands:
  - npm install -g stylelint stylelint-config-standard jslint
  - npx stylelint "themes/crisp/css/*.css"
  - jslint "themes/crisp/js/!(*.min).js"
    
- name: clone_phoenix
  image: alpine/git
  volumes:
  - name: phoenix
    path: /phoenix
  commands:
  - git clone https://github.com/tosdr/edit.tosdr.org /phoenix
    
- name: install_phoenix
  image: ruby:2.7.2
  volumes:
  - name: bundle
    path: /usr/local/bundle
  - name: phoenix
    path: /phoenix
  environment:
    DATABASE_HOST: postgres
    RAILS_ENV: development
    DATABASE_USER: postgres
  commands:
  - cd /phoenix
  - gem install bundler
  - gem install rails
  - bundle install
  - rails db:create db:migrate db:seed
  - echo 'u = Service.create :id => 1, :name => "Test Service", :url => "example.com", :created_at => "now()", :updated_at => "now()", :slug => "test_slug"' | rails c -e development

  
- name: create_crisp_config
  image: alpine
  commands:
  - echo -e "MYSQL_HOSTNAME=mariadb\n" > .env
  - echo -e "MYSQL_USERNAME=tosdr_dev\n" >> .env
  - echo -e "MYSQL_PASSWORD=tosdr_dev\n" >> .env
  - echo -e "MYSQL_DATABASE=tosdr_dev\n" >> .env
  - echo -e "REDIS_HOST=redis\n" >> .env
  - echo -e "REDIS_PORT=6379\n" >> .env
    

- name: migrate_crisp_lint
  image: php:7.4-buster
  environment:
    COMPOSER_ALLOW_SUPERUSER: 1
  commands:
  - mkdir /tmp/ci
  - cd /tmp/ci
  - apt-get update && apt-get install -y libpq-dev autoconf gcc libc6-dev make libicu-dev wget git-core zip
  - pecl install redis-5.3.2
  - docker-php-ext-install pgsql pdo_pgsql pdo_mysql intl
  - docker-php-ext-enable pdo_pgsql pdo_mysql redis intl
  - wget https://getcomposer.org/composer-stable.phar -O /tmp/ci/composer
  - cd /drone/src
  - php /tmp/ci/composer install
  - php bin/cli.php migrate
  - vendor/bin/twig-linter lint themes/crisp/templates/
  - vendor/bin/phpunit tests --bootstrap pixelcatproductions/crisp.php
  - rm /tmp/ci/composer

- name: docker  
  image: plugins/docker
  settings:
    username:
      from_secret: DOCKER_USERNAME
    password:
      from_secret: DOCKER_TOKEN
    repo: jbackpcat/tosdr-crisp
    tags: latest
  when:
    event:
        exclude:
        - pull_request
        - tag

volumes:
- name: bundle
  temp: {}
- name: phoenix
  temp: {}
- name: node_modules
  temp: {}
  
services:
- name: redis
  image: redis
- name: mariadb
  image: mariadb
  environment:
    MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    MYSQL_DATABASE: tosdr_dev
    MYSQL_PASSWORD: tosdr_dev
    MYSQL_USER: tosdr_dev
- name: postgres
  image: postgres
  environment:
    POSTGRES_USER: postgres
    POSTGRES_DB: postgres
    POSTGRES_HOST_AUTH_METHOD: trust

node:
    os: linux
    
